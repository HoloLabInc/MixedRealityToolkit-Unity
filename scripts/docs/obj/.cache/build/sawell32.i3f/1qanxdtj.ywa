<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>What makes a mixed reality feature | Mixed Reality Toolkit Documentation </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="What makes a mixed reality feature | Mixed Reality Toolkit Documentation ">
    <meta name="generator" content="docfx 2.48.0.0">
    
    <link rel="shortcut icon" href=".././Documentation/Images/favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-177859076-1"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
  
    gtag('config', 'UA-177859076-1');
    </script>
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src=".././Documentation/Images/mrt_logo_icon.png" alt="">
              </a>
            </div>
          
          <div class="version-dropdown" id="versionDropdown">
           </div>
         
          <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list"></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="what-makes-a-mixed-reality-feature" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="1">What makes a mixed reality feature</h1>

<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="3">To avoid the performance overheads of the <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="3">MonoBehaviour</code> class, all <em sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="3">services</em> (systems, features, or modules that require independent operation in a mixed reality solution, e.g. input, boundary, spatial awareness) are required to be discrete plain old c# classes which implement <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="3">IMixedRealityService</code> and to register with the <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="3">MixedRealityToolkit</code>.</p>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="5">The <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="5">MixedRealityToolkit</code> then coordinates all referencing between services and ensures that they receive all appropriate events (E.g. Awake/Initialize, Update, Destroy) as well as facilitating the finding of other services when needed.</p>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="7">Additionally, the <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="7">MixedRealityToolkit</code> also maintains the active VR/XR/AR SDK in use in the running project, to initialize the active device based on attached hardware and instigate proper operation.</p>
<h2 id="a-service" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="9">A service</h2>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="11">An individual service can be any functionality that needs to be implemented in the project. Traditionally some projects use <em sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="11">singletons</em> which need to be alive in the scene, but this pattern has its advantages and disadvantages. We've decided to break away from this pattern in favor of a hybrid approach that brings several benefits over the traditional singleton implementations with <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="11">MonoBehaviours</code>, namely:</p>
<ul sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="13">
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="13">Performance - without the overhead of a <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="13">MonoBehaviour</code>, <a href="https://blogs.unity3d.com/2015/12/23/1k-update-calls/" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="13">script updates are approximately 80% faster and don't require a <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="13">GameObject</code> to live in the scene</a>.</li>
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="14">Reference-ability - services can be discovered from the <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="14">MixedRealityToolkit</code> a lot faster and easier than searching <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="14">GameObjects</code> in a scene or using <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="14">FindObjectsOfType&lt;T&gt;</code>.</li>
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="15">No type dependency - though a method similar to dependency injection, services can be decoupled from their type, this means the concrete implementation can be swapped out at any time without adversely affecting code that consumes it (e.g. replacing the default InputSystem with your custom one, so long as you've fully implemented each interface).</li>
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="16">Multi-scene usage - if a service does need to know about a <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="16">transform</code> position in a scene, it can simply reference, or create, a <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="16">GameObject</code> <em sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="16">rather than be a component attached to it</em>. This makes it a lot easier to find and use the service when the project spans multiple scenes.</li>
</ul>
<h2 id="service-interfaces" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="18">Service interfaces</h2>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="20">The <em sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="20">service</em> container uses a predefined <em sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="20">interface</em> type for storage and retrieval of any service, this ensures there are no hard dependencies within the Mixed Reality Toolkit, so that each subsystem can easily be swapped out with another (so long as it conforms to the interface).</p>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="22">Current system interfaces provided by the Mixed Reality Toolkit include:</p>
<ul sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="24">
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="24"><a class="xref" href="../api/Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem.html" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="24"><code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="24">IMixedRealityInputSystem</code></a></li>
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="25"><a class="xref" href="../api/Microsoft.MixedReality.Toolkit.Boundary.IMixedRealityBoundarySystem.html" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="25"><code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="25">IMixedRealityBoundarySystem</code></a></li>
<li sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="26"><a class="xref" href="../api/Microsoft.MixedReality.Toolkit.Teleport.IMixedRealityTeleportSystem.html" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="26"><code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="26">IMixedRealityTeleportSystem</code></a></li>
</ul>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="28">When creating your own implementations of these systems, you must ensure each complies with the interfaces provided by the Mixed Reality Toolkit (e.g. if you replace the InputSystem with another of your own design).</p>
<div class="NOTE" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="30">
<h5>Note</h5>
<p sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31">All services must also inherit from the <a class="xref" href="../api/Microsoft.MixedReality.Toolkit.BaseService.html" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31"><code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31">BaseService</code></a> class or implement <a class="xref" href="../api/Microsoft.MixedReality.Toolkit.IMixedRealityService.html" sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31"><code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31">IMixedRealityService</code></a>, to implement the functions required by the <code sourcefile="../../Documentation.ja/MixedRealityServices.md" sourcestartlinenumber="31">MixedRealityToolkit</code> so their life-cycles are handled appropriately. (E.G. Initialize, Update, Destroy are called correctly.)</p>
</div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Documentation.ja/MixedRealityServices.md/#L1" class="contribution-link">Improve this Doc</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
